testclass CDPlayerTest for statechart CDPlayer {
		
	// test the statechart's initial configuration
	@Test
	operation testInitialStateConfiguration() {
		enter
		assert active(RemoteControl.Off)
		assert active(CDPlayer.Off)
	}
	
	operation processOnOff() {
		// raise an event sent to the remote control to turn on the CDPlayer
		raise RC.onOff
		// process the event		
		proceed 1 cycle
		// and process the event that will be raised implicitly by the RemoteControl
		proceed  1 cycle	
	}
	
	operation processPlay() {
		// raise an event sent to the remote control to play a CD
	    raise RC.play
		// process the event		
	    proceed 1 cycle
		// and process the event that will be raised implicitly by the RemoteControl
		proceed  1 cycle	
	}
	
	operation processPause() {
		// raise an event sent to the remote control to pause the CDPlayer
	    raise RC.pause
		// process the event		
	    proceed 1 cycle
		// and process the event that will be raised implicitly by the RemoteControl
		proceed  1 cycle	
	}
	
	operation processStop() {
		// raise an event sent to the remote control to stop playing
		raise RC.stop
		// process the event		
		proceed 1 cycle
		// and process the event that will be raised implicitly by the RemoteControl
		proceed 1 cycle
	}
	
	@Test
	operation testActivatedCDPlayer() {
		enter
		processOnOff() // turn on
		assert active(RemoteControl.On)
		assert active(CDPlayer.On)
		assert active(CDPlayer.On.r1.Stop)
	}
	
	@Test
	operation testDeactivateCDPlayer() {
		enter
		processOnOff() // turn on 
		processOnOff() // and turn off again
		assert active(RemoteControl.Off)
		assert active(CDPlayer.Off)
	}
	

	@Test
	operation testPlayPause() {
	    enter
	    processOnOff()
	    processPlay()
		assert active(CDPlayer.On.r1.Play)
		processPause()
		assert active(CDPlayer.On.r1.Pause)
		processPlay()
		assert active(CDPlayer.On.r1.Play)
		
	}
		
	@Test
	operation testPlayStop() {
	    enter
	    processOnOff()
		processPlay()
		assert active(CDPlayer.On.r1.Play)
		processStop()
		assert active(CDPlayer.On.r1.Stop)
	}
	
	@Test
	operation testPlayPauseStop() {
	    enter
	    processOnOff()
	    processPlay()
		assert active(CDPlayer.On.r1.Play)
		processPause()
		assert active(CDPlayer.On.r1.Pause)
		processStop()
		assert active(CDPlayer.On.r1.Stop)
	}
}

